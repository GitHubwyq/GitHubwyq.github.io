<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>无处停歇的博客</title>
  
  <subtitle>漫漫长路，伴你同行</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-05-23T03:01:59.033Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>无处停歇</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>vue知识点汇总</title>
    <link href="http://yoursite.com/2019/05/23/vue%E7%9F%A5%E8%AF%86%E7%82%B9%E6%B1%87%E6%80%BB/"/>
    <id>http://yoursite.com/2019/05/23/vue知识点汇总/</id>
    <published>2019-05-23T01:57:25.000Z</published>
    <updated>2019-05-23T03:01:59.033Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>记一次笔试面试题</title>
    <link href="http://yoursite.com/2019/05/18/%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%9D%A2%E8%AF%95%E7%AC%94%E8%AF%95%E9%A2%98/"/>
    <id>http://yoursite.com/2019/05/18/记一次面试笔试题/</id>
    <published>2019-05-18T09:42:46.000Z</published>
    <updated>2019-05-23T04:47:18.800Z</updated>
    
    <content type="html"><![CDATA[<h4 id="记一次笔试面试题经历"><a href="#记一次笔试面试题经历" class="headerlink" title="记一次笔试面试题经历"></a>记一次笔试面试题经历</h4><h5 id="刚拿到题目的时候是有点懵逼的。问了一下面试官，确定了一下需求。开始着手"><a href="#刚拿到题目的时候是有点懵逼的。问了一下面试官，确定了一下需求。开始着手" class="headerlink" title="刚拿到题目的时候是有点懵逼的。问了一下面试官，确定了一下需求。开始着手"></a>刚拿到题目的时候是有点懵逼的。问了一下面试官，确定了一下需求。开始着手</h5><blockquote><p>附上笔试题链接（<a href="http://face.gokxd.cn/）" target="_blank" rel="noopener">http://face.gokxd.cn/）</a></p></blockquote><h4 id="题目大体需求：两张照片合成一张，只替换照片的人脸部分"><a href="#题目大体需求：两张照片合成一张，只替换照片的人脸部分" class="headerlink" title="题目大体需求：两张照片合成一张，只替换照片的人脸部分"></a>题目大体需求：两张照片合成一张，只替换照片的人脸部分</h4><h5 id="明确步骤"><a href="#明确步骤" class="headerlink" title="明确步骤:"></a>明确步骤:</h5><blockquote><blockquote><p>①、给出的页面有点不简洁明了，自己动手重新设计布局<br>②、确定开放api接口（推荐使用face++，<a href="https://www.faceplusplus.com.cn/face-merging/" target="_blank" rel="noopener">传送门</a>）<br>③、上传照片时需要判断是否是人物照片（调用接口地址，<a href="https://console.faceplusplus.com.cn/documents/4888373" target="_blank" rel="noopener">传送门</a>）</p></blockquote></blockquote><h4 id="附上部分代码部分"><a href="#附上部分代码部分" class="headerlink" title="附上部分代码部分"></a>附上部分代码部分</h4><h5 id="识别人脸部分代码"><a href="#识别人脸部分代码" class="headerlink" title="识别人脸部分代码"></a>识别人脸部分代码</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">    url: url,</span><br><span class="line">    type: <span class="string">'POST'</span>,</span><br><span class="line">    data: data,</span><br><span class="line">    cache: <span class="literal">false</span>,</span><br><span class="line">    success(data) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(data.faces.length)</span><br><span class="line">        <span class="comment">//data.faces 被检测出的人脸数组，具体包含内容见下文。注：如果没有检测出人脸则为空数组</span></span><br><span class="line">            </span><br><span class="line">        <span class="keyword">if</span>(data.faces.length != <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">document</span>.getElementById(<span class="string">'show'</span>).src=base1; </span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(data.faces.length == <span class="number">0</span>)&#123;</span><br><span class="line">            $.alert(&#123;</span><br><span class="line">                title: <span class="string">''</span>,</span><br><span class="line">                text: <span class="string">'未检测到人脸,请重新选择图片！'</span>,</span><br><span class="line">                onOK: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="comment">//点击确认</span></span><br><span class="line">                &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">        &#125; </span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h5 id="人脸融合部分代码"><a href="#人脸融合部分代码" class="headerlink" title="人脸融合部分代码"></a>人脸融合部分代码</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> postData = &#123;</span><br><span class="line">    api_key:<span class="string">'你注册的api_key'</span>,</span><br><span class="line">    api_secret:<span class="string">'你注册的api_secret'</span>,</span><br><span class="line">    template_base64:mouldPhoSrc,</span><br><span class="line">    <span class="comment">// template_rectangle:'70,80,100,100',</span></span><br><span class="line">    merge_base64:fusePhoSrc</span><br><span class="line">&#125;</span><br><span class="line">$.ajax(&#123;</span><br><span class="line">    dataType: <span class="string">'json'</span>, </span><br><span class="line">    type: <span class="string">'POST'</span> ,</span><br><span class="line">    url: <span class="string">'https://api-cn.faceplusplus.com/imagepp/v1/mergeface'</span>,</span><br><span class="line">    data: postData,</span><br><span class="line">    success: <span class="function"><span class="keyword">function</span>(<span class="params">response</span>)</span>&#123; </span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">typeof</span>(response.error_message) == <span class="string">"undefined"</span>)&#123;</span><br><span class="line">            <span class="comment">// todo: 在这里添加生成后的逻辑，response.result 为生成图的base64编码</span></span><br><span class="line">            $(<span class="string">'.uploadpic'</span>).attr(<span class="string">'src'</span>, <span class="string">'data:image/jpg/png;base64,'</span> + response.result); </span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">// todo: 在这里添加上传失败的逻辑</span></span><br><span class="line">            alert(<span class="string">'请重新上传照片23'</span>);</span><br><span class="line">        &#125; </span><br><span class="line">    &#125;,</span><br><span class="line">    error: <span class="function"><span class="keyword">function</span>(<span class="params">xhr, status, error</span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(xhr.responseText);</span><br><span class="line">        <span class="comment">// todo: 在这里添加上传失败的逻辑</span></span><br><span class="line">        alert(<span class="string">'请重新上传照片'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h5 id="附上完整项目链接，由于没做屏幕适配，所以移动端画面有点乱，后续进行优化。-人脸融合传送门"><a href="#附上完整项目链接，由于没做屏幕适配，所以移动端画面有点乱，后续进行优化。-人脸融合传送门" class="headerlink" title="附上完整项目链接，由于没做屏幕适配，所以移动端画面有点乱，后续进行优化。 人脸融合传送门"></a>附上完整项目链接，由于没做屏幕适配，所以移动端画面有点乱，后续进行优化。 <a href="https://githubwyq.github.io/AI/" target="_blank" rel="noopener">人脸融合传送门</a></h5>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;记一次笔试面试题经历&quot;&gt;&lt;a href=&quot;#记一次笔试面试题经历&quot; class=&quot;headerlink&quot; title=&quot;记一次笔试面试题经历&quot;&gt;&lt;/a&gt;记一次笔试面试题经历&lt;/h4&gt;&lt;h5 id=&quot;刚拿到题目的时候是有点懵逼的。问了一下面试官，确定了一下需求。开始
      
    
    </summary>
    
      <category term="面试题" scheme="http://yoursite.com/categories/%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
    
      <category term="面试题" scheme="http://yoursite.com/tags/%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>小程序和vue有哪些不同？</title>
    <link href="http://yoursite.com/2019/05/15/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%92%8Cvue%E6%9C%89%E5%93%AA%E4%BA%9B%E4%B8%8D%E5%90%8C%EF%BC%9F/"/>
    <id>http://yoursite.com/2019/05/15/小程序和vue有哪些不同？/</id>
    <published>2019-05-15T07:07:08.000Z</published>
    <updated>2019-05-23T04:18:05.415Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-生命周期"><a href="#1-生命周期" class="headerlink" title="1.生命周期"></a>1.生命周期</h4><h5 id="小程序"><a href="#小程序" class="headerlink" title="小程序"></a>小程序</h5><blockquote><p>onLoad：页面加载  </p><blockquote><p>一个页面只会调用一次，可以在 onLoad 中获取打开当前页面所调用的 query 参数。  </p></blockquote></blockquote><blockquote><p>onShow：页面显示  </p><blockquote><p>每次打开页面都会调用一次</p></blockquote></blockquote><blockquote><p>onReady：页面初次渲染完成  </p><blockquote><p>一个页面只会调用一次，代表页面已经准备妥当，可以和视图层进行交互。对界面的设置如 wx.setNavigationBarTitle请在 onReady之后设置。详见生命周期。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wx.setNavigationBarTitle(&#123;</span><br><span class="line"></span><br><span class="line">title:<span class="keyword">this</span>.data.titleName</span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p></blockquote></blockquote><blockquote><p>onHide：页面隐藏</p><blockquote><p>当 navigateTo或底部tab切换时调用。</p></blockquote></blockquote><blockquote><p>onUnload：页面卸载  </p><blockquote><p>当 redirectTo或 navigateBack的时候调用。</p></blockquote></blockquote><h5 id="Vue-js"><a href="#Vue-js" class="headerlink" title="Vue.js"></a>Vue.js</h5><blockquote><p>创建前/后：(这两个生命周期里获取不到dom元素)</p><blockquote><p>在beforeCreated阶段，vue实例的挂载元素$el和数据对象data都为undefined，还未初始化。在created阶段，vue实例的数据对象data有了，$el还没有。</p></blockquote></blockquote><blockquote><p>载入前/后：（mounted生命周期里可以获取到dom元素）</p><blockquote><p>在beforeMount阶段，vue实例的$el和data都初始化了，但还是挂载之前为虚拟的dom节点，data.message还未替换。在mounted阶段，vue实例挂载完成，data.message成功渲染。</p></blockquote></blockquote><blockquote><p>更新前/后：  </p><blockquote><p>当data变化时，会触发beforeUpdate和updated方法。</p></blockquote></blockquote><blockquote><p>销毁前/后：</p><blockquote><p>在执行destroy方法后，对data的改变不会再触发周期函数，说明此时vue实例已经解除了事件监听以及和dom的绑定，但是dom结构依然存在</p></blockquote></blockquote><h4 id="2、数据双向绑定"><a href="#2、数据双向绑定" class="headerlink" title="2、数据双向绑定"></a>2、数据双向绑定</h4><h5 id="1、设置值"><a href="#1、设置值" class="headerlink" title="1、设置值"></a>1、设置值</h5><blockquote><p>在vue中，只需要再表单元素上加上 v-model,然后再绑定 data中对应的一个值，当表单元素内容发生变化时， data中对应的值也会相应改变，这是vue非常nice的一点。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">"app"</span>&gt;</span><br><span class="line"> &lt;input v-model=<span class="string">"reason"</span> placeholder=<span class="string">"填写理由"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">'reason'</span>/&gt;</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp"> </span></span><br><span class="line"><span class="regexp">new Vue(&#123;</span></span><br><span class="line"><span class="regexp"> el: '#app',</span></span><br><span class="line"><span class="regexp"> data: &#123;</span></span><br><span class="line"><span class="regexp">    reason:''</span></span><br><span class="line"><span class="regexp"> &#125;</span></span><br><span class="line"><span class="regexp">&#125;)</span></span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>然而在小程序中，却没有这个功能。</p></blockquote><blockquote><p>当表单内容发生变化时，会触发表单元素上绑定的方法，然后在该方法中，通过 this.setData({key:value})来将表单上的值赋值给 data中的对应值。  </p><blockquote><p>下面是代码<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;input bindinput=<span class="string">"bindReason"</span> placeholder=<span class="string">"填写理由"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">'reason'</span> value=<span class="string">'&#123;&#123;reason&#125;&#125;'</span> name=<span class="string">"reason"</span> /&gt;</span><br><span class="line"> </span><br><span class="line">Page(&#123;</span><br><span class="line">    data:&#123;</span><br><span class="line">        reason:<span class="string">''</span></span><br><span class="line">    &#125;,</span><br><span class="line">    bindReason(e) &#123;</span><br><span class="line">        <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">        reason: e.detail.value</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p></blockquote></blockquote><h5 id="2、取值"><a href="#2、取值" class="headerlink" title="2、取值"></a>2、取值</h5><blockquote><p>vue中，通过 this.reason取值。</p></blockquote><blockquote><p>小程序中，通过 this.data.reason取值。 </p></blockquote><h4 id="3-组件通信"><a href="#3-组件通信" class="headerlink" title="3.组件通信"></a>3.组件通信</h4><h5 id="1、子组件的使用"><a href="#1、子组件的使用" class="headerlink" title="1、子组件的使用"></a>1、子组件的使用</h5><blockquote><p>在vue中，需要：</p><blockquote><p>1、编写子组件<br>2、在需要使用的父组件中通过 import引入<br>3、在 vue的 components中注册<br>4、在模板中使用<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//子组件 bar.vue</span></span><br><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"search-box"</span>&gt;</span><br><span class="line">    &lt;div @click=<span class="string">"say"</span> :title=<span class="string">"title"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"icon-dismiss"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">export</span> <span class="keyword">default</span>&#123;</span><br><span class="line">        props:&#123;</span><br><span class="line">            title:&#123;</span><br><span class="line">            type:<span class="built_in">String</span>,</span><br><span class="line">            <span class="keyword">default</span>:<span class="string">''</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods:&#123;</span><br><span class="line">        say()&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'明天不上班'</span>);</span><br><span class="line">            <span class="keyword">this</span>.$emit(<span class="string">'helloWorld'</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">    </span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/ 父组件 foo.vue</span></span><br><span class="line"><span class="regexp">&lt;template&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div class="container"&gt;</span></span><br><span class="line"><span class="regexp">        &lt;bar :title="title" @helloWorld="helloWorld"&gt;&lt;/</span>bar&gt;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>template&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">import</span> Bar <span class="keyword">from</span> <span class="string">'./bar.vue'</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span><br><span class="line">data:&#123;</span><br><span class="line">    title:<span class="string">"我是标题"</span></span><br><span class="line">&#125;,</span><br><span class="line">methods:&#123;</span><br><span class="line">    helloWorld()&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'我接收到子组件传递的事件了'</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br><span class="line">components:&#123;</span><br><span class="line">    Bar</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure></p></blockquote></blockquote><blockquote><p>子组件和父组件通信可以通过 this.$emit将方法和数据传递给父组件。</p></blockquote><h5 id="小程序中"><a href="#小程序中" class="headerlink" title="小程序中"></a>小程序中</h5><blockquote><p>1、编写子组件<br>2、在子组件的 json文件中，将该文件声明为组件<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">"component"</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>3、在需要引入的父组件的 json文件中，在 usingComponents填写引入组件的组件名以及路径<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"usingComponents"</span>: &#123;</span><br><span class="line">    <span class="string">"tab-bar"</span>: <span class="string">"../../components/tabBar/tabBar"</span></span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>4、在父组件中，直接引入即可<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;tab-bar currentpage=<span class="string">"index"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">tab-bar</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>完整代码如下<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 子组件</span></span><br><span class="line">&lt;!--components/tabBar/tabBar.wxml--&gt;</span><br><span class="line">&lt;view <span class="class"><span class="keyword">class</span></span>=<span class="string">'tabbar-wrapper'</span>&gt;</span><br><span class="line">    &lt;view <span class="class"><span class="keyword">class</span></span>=<span class="string">'left-bar &#123;&#123;currentpage==="index"?"active":""&#125;&#125;'</span> bindtap=<span class="string">'jumpToIndex'</span>&gt;</span><br><span class="line">        &lt;text <span class="class"><span class="keyword">class</span></span>=<span class="string">'iconfont icon-shouye'</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">text</span>&gt;</span></span></span><br><span class="line">        &lt;view&gt;首页&lt;<span class="regexp">/view&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>view&gt;</span><br><span class="line">    &lt;view <span class="class"><span class="keyword">class</span></span>=<span class="string">'right-bar &#123;&#123;currentpage==="setting"?"active":""&#125;&#125;'</span> bindtap=<span class="string">'jumpToSetting'</span>&gt;</span><br><span class="line">        &lt;text <span class="class"><span class="keyword">class</span></span>=<span class="string">'iconfont icon-shezhi'</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">text</span>&gt;</span></span></span><br><span class="line">        &lt;view&gt;设置&lt;<span class="regexp">/view&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>view&gt;</span><br><span class="line">&lt;<span class="regexp">/view&gt;</span></span><br></pre></td></tr></table></figure></p></blockquote><h4 id="4、父子组件通信"><a href="#4、父子组件通信" class="headerlink" title="4、父子组件通信"></a>4、父子组件通信</h4><blockquote><p>在vue中<br>父组件向子组件传递数据，只需要在子组件通过 v-bind传入一个值，在子组件中，通过 props接收，即可完成数据的传递，示例：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 父组件 foo.vue</span></span><br><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"container"</span>&gt;</span><br><span class="line">    &lt;bar :title=<span class="string">"title"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">bar</span>&gt;</span></span></span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">import</span> Bar <span class="keyword">from</span> <span class="string">'./bar.vue'</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span><br><span class="line">data:&#123;</span><br><span class="line">    title:<span class="string">"我是标题"</span></span><br><span class="line">&#125;,</span><br><span class="line">components:&#123;</span><br><span class="line">    Bar</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp"> </span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/ 子组件bar.vue</span></span><br><span class="line"><span class="regexp">&lt;template&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div class="search-box"&gt;</span></span><br><span class="line"><span class="regexp">        &lt;div :title="title" &gt;&lt;/</span>div&gt;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span><br><span class="line">props:&#123;</span><br><span class="line">    title:&#123;</span><br><span class="line">        type:<span class="built_in">String</span>,</span><br><span class="line">            <span class="keyword">default</span>:<span class="string">''</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure></p></blockquote><h5 id="小程序中-1"><a href="#小程序中-1" class="headerlink" title="小程序中"></a>小程序中</h5><blockquote><p>父组件向子组件通信和vue类似，但是小程序没有通过 v-bind，而是直接将值赋值给一个变量，如下：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;tab-bar currentpage=<span class="string">"index"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">tab-bar</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>此处， “index”就是要向子组件传递的值,在子组件 properties中，接收传递的值。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">properties: &#123;</span><br><span class="line">    <span class="comment">// 弹窗标题</span></span><br><span class="line">    currentpage: &#123;   <span class="comment">// 属性名</span></span><br><span class="line">        type: <span class="built_in">String</span>,  <span class="comment">// 类型（必填），目前接受的类型包括：String, Number, Boolean, Object, Array, null（表示任意类型）</span></span><br><span class="line">        value: <span class="string">'index'</span>  <span class="comment">// 属性初始值（可选），如果未指定则会根据类型选择一个</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>子组件向父组件通信和 vue也很类似，代码如下：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//子组件中</span></span><br><span class="line">methods: &#123;</span><br><span class="line">    <span class="comment">// 传递给父组件</span></span><br><span class="line">    cancelBut: <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> that = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">var</span> myEventDetail = &#123; <span class="attr">pickerShow</span>: <span class="literal">false</span>, <span class="attr">type</span>: <span class="string">'cancel'</span> &#125; <span class="comment">// detail对象，提供给事件监听函数</span></span><br><span class="line">        <span class="keyword">this</span>.triggerEvent(<span class="string">'myevent'</span>, myEventDetail) <span class="comment">//myevent自定义名称事件，父组件中使用</span></span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//父组件中</span></span><br><span class="line">&lt;bar bind:myevent=<span class="string">"toggleToast"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">bar</span>&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">// 获取子组件信息</span></span><br><span class="line">toggleToast(e)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(e.detail)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>如果父组件想要调用子组件的方法<br>vue会给子组件添加一个 ref属性，通过 this.$refs.ref的值便可以获取到该子组件，然后便可以调用子组件中的任意方法，例如：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//子组件</span></span><br><span class="line">&lt;bar ref=<span class="string">"bar"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">bar</span>&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//父组件</span></span><br><span class="line"><span class="keyword">this</span>.$refs.bar.子组件的方法</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>小程序是给子组件添加 id或者 class，然后通过 this.selectComponent找到子组件，然后再调用子组件的方法,示例：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//子组件</span></span><br><span class="line">&lt;bar id=<span class="string">"bar"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">bar</span>&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">// 父组件</span></span><br><span class="line"><span class="keyword">this</span>.selectComponent(<span class="string">'#bar'</span>).子组件的方法</span><br></pre></td></tr></table></figure></p></blockquote><h4 id="5、条件渲染"><a href="#5、条件渲染" class="headerlink" title="5、条件渲染"></a>5、条件渲染</h4><blockquote><p>vue:使用v-if指令，v-else表示v-if的else块，v-else-if表示v-if 的“else-if 块”<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">"type === 'A'"</span>&gt;</span></span><br><span class="line">    A</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else-if</span>=<span class="string">"type === 'B'"</span>&gt;</span></span><br><span class="line">    B</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else-if</span>=<span class="string">"type === 'C'"</span>&gt;</span></span><br><span class="line">    C</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else</span>&gt;</span></span><br><span class="line">    Not A/B/C</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>微信小程序：使用wx:if,wx:else表示wx:if的else块，wx:elif表示wx:if的”else-if”块<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:if</span>=<span class="string">"&#123;&#123;length &gt; 5&#125;&#125;"</span>&gt;</span> 1 <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:elif</span>=<span class="string">"&#123;&#123;length &gt; 2&#125;&#125;"</span>&gt;</span> 2 <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:else</span>&gt;</span> 3 <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure></p></blockquote><h4 id="6、显示隐藏元素"><a href="#6、显示隐藏元素" class="headerlink" title="6、显示隐藏元素"></a>6、显示隐藏元素</h4><blockquote><p>VUE<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">v-show=<span class="string">"..."</span></span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>微信小程序：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hidden=<span class="string">"&#123;&#123;...&#125;&#125;"</span></span><br></pre></td></tr></table></figure></p></blockquote><h4 id="7、绑定class"><a href="#7、绑定class" class="headerlink" title="7、绑定class"></a>7、绑定class</h4><h5 id="Vue"><a href="#Vue" class="headerlink" title="Vue"></a>Vue</h5><blockquote><p>全用v-bind，或者简写为:bind,和本有的class分开写<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"test"</span> <span class="attr">v-bind:class</span>=<span class="string">"&#123; active: isActive &#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p></blockquote><h5 id="小程序-1"><a href="#小程序-1" class="headerlink" title="小程序"></a>小程序</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"test &#123;&#123;isActive ? 'active':'' &#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="8、事件处理"><a href="#8、事件处理" class="headerlink" title="8、事件处理"></a>8、事件处理</h4><h5 id="Vue-1"><a href="#Vue-1" class="headerlink" title="Vue"></a>Vue</h5><blockquote><p>使用v-on:event绑定事件，或者使用@event绑定事件(v-on可以简写为@)<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">"counter += 1"</span>&gt;</span></span><br><span class="line">    Add 1</span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click.stop</span>=<span class="string">"counter+=1"</span>&gt;</span></span><br><span class="line">    Add1</span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span>  //阻止事件冒泡</span><br></pre></td></tr></table></figure></p></blockquote><h5 id="微信小程序"><a href="#微信小程序" class="headerlink" title="微信小程序"></a>微信小程序</h5><blockquote><p>全用bindtap(bind+event)，或者catchtap(catch+event)绑定事件<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">bindtap</span>=<span class="string">"clickMe"</span>&gt;</span></span><br><span class="line">    点击我</span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">catchtap</span>=<span class="string">"clickMe"</span>&gt;</span></span><br><span class="line">    点击我</span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span>  //阻止事件冒泡</span><br></pre></td></tr></table></figure></p></blockquote><h4 id="9、绑定事件传参"><a href="#9、绑定事件传参" class="headerlink" title="9、绑定事件传参"></a>9、绑定事件传参</h4><h5 id="Vue-2"><a href="#Vue-2" class="headerlink" title="Vue"></a>Vue</h5><blockquote><p>vue绑定事件的函数传参数时，可以把参数写在函数后面的括号里<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> @<span class="attr">click</span>=<span class="string">"changeTab(1)"</span>&gt;</span>哈哈<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p></blockquote><h5 id="微信小程序-1"><a href="#微信小程序-1" class="headerlink" title="微信小程序"></a>微信小程序</h5><blockquote><p>微信小程序的事件我试过只能传函数名，至于函数值，可以绑定到元素中，在函数中获取<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">data-tab</span>=<span class="string">"1"</span> <span class="attr">catchtap</span>=<span class="string">"changeTab"</span>&gt;</span>哈哈<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure></p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">changeTab(e)&#123;</span><br><span class="line">   <span class="keyword">var</span> _tab = e.currentTarget.dataset.tab;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="暂时总结这么多"><a href="#暂时总结这么多" class="headerlink" title="暂时总结这么多"></a>暂时总结这么多</h5><!-- ![这是一张图片](https://github.com/GitHubwyq/photos/blob/master/imgs/1540356271655.jpg?raw=true) --><div style="display:flex;justify-content: flex-start"><br>    <img src="https://github.com/GitHubwyq/photos/blob/master/imgs/1540356271655.jpg?raw=true" alt="这是一张图片"><br></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;1-生命周期&quot;&gt;&lt;a href=&quot;#1-生命周期&quot; class=&quot;headerlink&quot; title=&quot;1.生命周期&quot;&gt;&lt;/a&gt;1.生命周期&lt;/h4&gt;&lt;h5 id=&quot;小程序&quot;&gt;&lt;a href=&quot;#小程序&quot; class=&quot;headerlink&quot; title=&quot;小程序
      
    
    </summary>
    
      <category term="Vue" scheme="http://yoursite.com/categories/Vue/"/>
    
    
      <category term="Vue" scheme="http://yoursite.com/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>滚动吸顶效果的实现方式</title>
    <link href="http://yoursite.com/2018/03/15/%E6%BB%9A%E5%8A%A8%E5%90%B8%E9%A1%B6%E6%95%88%E6%9E%9C%E7%9A%84%E5%AE%9E%E7%8E%B0-%E6%96%B9%E5%BC%8F/"/>
    <id>http://yoursite.com/2018/03/15/滚动吸顶效果的实现-方式/</id>
    <published>2018-03-15T15:50:19.000Z</published>
    <updated>2019-05-23T02:59:16.452Z</updated>
    
    <content type="html"><![CDATA[<h4 id="实现方式"><a href="#实现方式" class="headerlink" title="实现方式"></a>实现方式</h4><p>1.使用 position:sticky 实现</p><p>2.使用 JQuery 的 offset().top 实现</p><p>3.使用原生的 offsetTop 实现</p><h4 id="一、使用-position-sticky-实现"><a href="#一、使用-position-sticky-实现" class="headerlink" title="一、使用 position:sticky 实现"></a>一、使用 position:sticky 实现</h4><blockquote><p>1.什么是sticky（粘性定位）</p><blockquote><p>粘性定位 sticky 相当于相对定位 relative 和固定定位 fixed 的结合；在页面元素滚动过程中，某个元素距离其父元素的距离达到 sticky 粘性定位的要求时；元素的相对定位 relative 效果变成固定定位 fixed 的效果。</p></blockquote></blockquote><blockquote><p>2.如何使用？</p><blockquote><p>使用条件</p><blockquote><p>1.父元素不能 overflow:hidden 或者 overflow:auto 属性;<br>2.必须指定 top、bottom、left、right 4 个值之一，否则只会处于相对定位<br>3.父元素的高度不能低于 sticky 元素的高度<br>4.sticky 元素仅在其父元素内生效  </p></blockquote></blockquote></blockquote><blockquote><blockquote><p>在需要滚动吸顶的元素加上以下样式便可以实现这个效果：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.sticky</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: -webkit-sticky;</span><br><span class="line">    <span class="attribute">position</span>: sticky;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote></blockquote><h4 id="二、使用-JQuery-的-offset-top-实现"><a href="#二、使用-JQuery-的-offset-top-实现" class="headerlink" title="二、使用 JQuery 的 offset().top 实现"></a>二、使用 JQuery 的 offset().top 实现</h4><h5 id="我们知道-JQuery-中封装了操作-DOM-和读取-DOM-计算属性的-API，基于-offset-top-这个-API-和-scrollTop-的结合，我们也可以实现滚动吸顶效果。"><a href="#我们知道-JQuery-中封装了操作-DOM-和读取-DOM-计算属性的-API，基于-offset-top-这个-API-和-scrollTop-的结合，我们也可以实现滚动吸顶效果。" class="headerlink" title="我们知道 JQuery 中封装了操作 DOM 和读取 DOM 计算属性的 API，基于 offset().top 这个 API 和 scrollTop() 的结合，我们也可以实现滚动吸顶效果。"></a>我们知道 JQuery 中封装了操作 DOM 和读取 DOM 计算属性的 API，基于 offset().top 这个 API 和 scrollTop() 的结合，我们也可以实现滚动吸顶效果。</h5> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> <span class="built_in">window</span>.addEventListener(<span class="string">'scroll'</span>, self.handleScrollOne);</span><br><span class="line">...</span><br><span class="line">handleScrollOne: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> self = <span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">let</span> scrollTop = $(<span class="string">'html'</span>).scrollTop();</span><br><span class="line">    <span class="keyword">let</span> offsetTop = $(<span class="string">'.title_box'</span>).offset().top;</span><br><span class="line">    self.titleFixed = scrollTop &gt; offsetTop;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="三、使用原生的-offsetTop-实现"><a href="#三、使用原生的-offsetTop-实现" class="headerlink" title="三、使用原生的 offsetTop 实现"></a>三、使用原生的 offsetTop 实现</h4><h5 id="我们知道-offsetTop-是相对定位父级的偏移量，倘若需要滚动吸顶的元素出现定位父级元素，那么-offsetTop-获取的就不是元素距离页面顶部的距离。"><a href="#我们知道-offsetTop-是相对定位父级的偏移量，倘若需要滚动吸顶的元素出现定位父级元素，那么-offsetTop-获取的就不是元素距离页面顶部的距离。" class="headerlink" title="我们知道 offsetTop 是相对定位父级的偏移量，倘若需要滚动吸顶的元素出现定位父级元素，那么 offsetTop 获取的就不是元素距离页面顶部的距离。"></a>我们知道 offsetTop 是相对定位父级的偏移量，倘若需要滚动吸顶的元素出现定位父级元素，那么 offsetTop 获取的就不是元素距离页面顶部的距离。</h5><h5 id="我们可以自己对-offsetTop-做以下处理："><a href="#我们可以自己对-offsetTop-做以下处理：" class="headerlink" title="我们可以自己对 offsetTop 做以下处理："></a>我们可以自己对 offsetTop 做以下处理：</h5> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"> getOffset: <span class="function"><span class="keyword">function</span>(<span class="params">obj,direction</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> offsetL = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">let</span> offsetT = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>( obj!== <span class="built_in">window</span>.document.body &amp;&amp; obj !== <span class="literal">null</span> )&#123;</span><br><span class="line">        offsetL += obj.offsetLeft;</span><br><span class="line">        offsetT += obj.offsetTop;</span><br><span class="line">        obj = obj.offsetParent;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(direction === <span class="string">'left'</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> offsetL;</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> offsetT;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="string">``</span><span class="string">`  </span></span><br><span class="line"><span class="string">##### 使用  </span></span><br><span class="line"><span class="string">`</span><span class="string">``</span>js</span><br><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">'scroll'</span>, self.handleScrollTwo);</span><br><span class="line">...</span><br><span class="line">handleScrollTwo: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> self = <span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">let</span> scrollTop = <span class="built_in">window</span>.pageYOffset || <span class="built_in">document</span>.documentElement.scrollTop || <span class="built_in">document</span>.body.scrollTop;</span><br><span class="line">    <span class="keyword">let</span> offsetTop = self.getOffset(self.$refs.pride_tab_fixed);</span><br><span class="line">    self.titleFixed = scrollTop &gt; offsetTop;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;实现方式&quot;&gt;&lt;a href=&quot;#实现方式&quot; class=&quot;headerlink&quot; title=&quot;实现方式&quot;&gt;&lt;/a&gt;实现方式&lt;/h4&gt;&lt;p&gt;1.使用 position:sticky 实现&lt;/p&gt;
&lt;p&gt;2.使用 JQuery 的 offset().top 实现&lt;/
      
    
    </summary>
    
      <category term="JavaScript" scheme="http://yoursite.com/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>琐碎小问题！</title>
    <link href="http://yoursite.com/2018/02/04/%E7%90%90%E7%A2%8E%E5%B0%8F%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2018/02/04/琐碎小问题/</id>
    <published>2018-02-04T05:49:57.000Z</published>
    <updated>2019-05-23T03:33:19.289Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1、去除select的默认三角样式"><a href="#1、去除select的默认三角样式" class="headerlink" title="1、去除select的默认三角样式"></a>1、去除select的默认三角样式</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">select</span>&#123;</span><br><span class="line">  <span class="attribute">-webkit-appearance</span>: none;</span><br><span class="line">  <span class="attribute">-webkit-tap-highlight-color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">outline</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2、文字超出隐藏"><a href="#2、文字超出隐藏" class="headerlink" title="2、文字超出隐藏"></a>2、文字超出隐藏</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    white-space: nowrap;      //不换行</span><br><span class="line">    text-overflow: ellipsis;  //超出省略号</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3、iframe通过下列代码可以实现去除边框，滚动条，但是需要调整好高度，而且对应的子页面，高度应该是固定的，才容易使用"><a href="#3、iframe通过下列代码可以实现去除边框，滚动条，但是需要调整好高度，而且对应的子页面，高度应该是固定的，才容易使用" class="headerlink" title="3、iframe通过下列代码可以实现去除边框，滚动条，但是需要调整好高度，而且对应的子页面，高度应该是固定的，才容易使用"></a>3、iframe通过下列代码可以实现去除边框，滚动条，但是需要调整好高度，而且对应的子页面，高度应该是固定的，才容易使用</h4> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">"http://www.zhixin001.com/test/about.html"</span> <span class="attr">style</span>=<span class="string">"width:100%;height:1100px"</span> <span class="attr">name</span>=<span class="string">"iframe_a"</span>  <span class="attr">frameborder</span>=<span class="string">"no"</span> <span class="attr">border</span>=<span class="string">"0"</span> <span class="attr">marginwidth</span>=<span class="string">"0"</span> <span class="attr">marginheight</span>=<span class="string">"0"</span> <span class="attr">scrolling</span>=<span class="string">"no"</span> <span class="attr">allowtransparency</span>=<span class="string">"yes"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4、如何控制窗体滚动高度的问题？"><a href="#4、如何控制窗体滚动高度的问题？" class="headerlink" title="4、如何控制窗体滚动高度的问题？"></a>4、如何控制窗体滚动高度的问题？</h4><h5 id="如果只是为了获取当前网页的窗体的滚动高度，直接使用window-pageYOFFset就可以了（IE9-），桌面和移动端都支持"><a href="#如果只是为了获取当前网页的窗体的滚动高度，直接使用window-pageYOFFset就可以了（IE9-），桌面和移动端都支持" class="headerlink" title="如果只是为了获取当前网页的窗体的滚动高度，直接使用window.pageYOFFset就可以了（IE9+），桌面和移动端都支持"></a>如果只是为了获取当前网页的窗体的滚动高度，直接使用window.pageYOFFset就可以了（IE9+），桌面和移动端都支持</h5><h5 id="但是window-pageYOFFset是一个只读属性，我们无法用来设置窗体的滚动高度，此时，就要找到对应的滚动元素，通过设置scrollTop值来改变窗体的滚动位置"><a href="#但是window-pageYOFFset是一个只读属性，我们无法用来设置窗体的滚动高度，此时，就要找到对应的滚动元素，通过设置scrollTop值来改变窗体的滚动位置" class="headerlink" title="但是window.pageYOFFset是一个只读属性，我们无法用来设置窗体的滚动高度，此时，就要找到对应的滚动元素，通过设置scrollTop值来改变窗体的滚动位置"></a>但是window.pageYOFFset是一个只读属性，我们无法用来设置窗体的滚动高度，此时，就要找到对应的滚动元素，通过设置scrollTop值来改变窗体的滚动位置</h5><h5 id="然而，桌面和移动端的窗体滚动元素是不一样的"><a href="#然而，桌面和移动端的窗体滚动元素是不一样的" class="headerlink" title="然而，桌面和移动端的窗体滚动元素是不一样的"></a>然而，桌面和移动端的窗体滚动元素是不一样的</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.documentElement.scrollTop;（只在PC端生效）</span><br><span class="line"><span class="built_in">document</span>.body.scrollTop;（只在移动端生效）</span><br></pre></td></tr></table></figure><h5 id="使用document-scrollingElement-scrollTop来控制"><a href="#使用document-scrollingElement-scrollTop来控制" class="headerlink" title="使用document.scrollingElement.scrollTop来控制"></a>使用document.scrollingElement.scrollTop来控制</h5><p>如：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.scrollingElement.scrollTop = <span class="number">400</span></span><br></pre></td></tr></table></figure></p><h4 id="5、超出部分隐藏"><a href="#5、超出部分隐藏" class="headerlink" title="5、超出部分隐藏"></a>5、超出部分隐藏</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">overflow</span><span class="selector-pseudo">:hidden</span>;</span><br><span class="line"><span class="selector-tag">text-overflow</span><span class="selector-pseudo">:ellipsis</span>;</span><br><span class="line"><span class="selector-tag">white-space</span><span class="selector-pseudo">:nowrap</span></span><br></pre></td></tr></table></figure><h4 id="6、查看本机ip地址"><a href="#6、查看本机ip地址" class="headerlink" title="6、查看本机ip地址"></a>6、查看本机ip地址</h4><blockquote><p>命令行输入 ipconfig</p></blockquote><h4 id="7、input框只能输入整数"><a href="#7、input框只能输入整数" class="headerlink" title="7、input框只能输入整数"></a>7、input框只能输入整数</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">onkeyup=<span class="string">"value=value.replace(/[^0-9]/g,'')"</span>       (包括<span class="number">0</span>)</span><br><span class="line">onkeyup=<span class="string">"value=value.replace(/^(0+)|[^\d]+/g,'')"</span>     （不包括<span class="number">0</span>）</span><br></pre></td></tr></table></figure><h4 id="8、input框限制输入长度-（可以在type为number时-maxlength无效时使用）"><a href="#8、input框限制输入长度-（可以在type为number时-maxlength无效时使用）" class="headerlink" title="8、input框限制输入长度  （可以在type为number时 maxlength无效时使用）"></a>8、input框限制输入长度  （可以在type为number时 maxlength无效时使用）</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">oninput=<span class="string">"if(value.length&gt;5)value=value.slice(0,5)"</span></span><br></pre></td></tr></table></figure><h4 id="9、H5和原生交互"><a href="#9、H5和原生交互" class="headerlink" title="9、H5和原生交互"></a>9、H5和原生交互</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> u = navigator.userAgent,</span><br><span class="line">app = navigator.appVersion;</span><br><span class="line"><span class="keyword">var</span> isAndroid = u.indexOf(<span class="string">'Android'</span>) &gt; <span class="number">-1</span> || u.indexOf(<span class="string">'Linux'</span>) &gt; <span class="number">-1</span>; <span class="comment">//g</span></span><br><span class="line"><span class="keyword">var</span> isIOS = !!u.match(<span class="regexp">/\(i[^;]+;( U;)? CPU.+Mac OS X/</span>); <span class="comment">//ios终端</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">showToast</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(getCookie(<span class="string">"VERSION"</span>)||getCookie(<span class="string">"PHONETYPE"</span>)||getCookie(<span class="string">"DEVICEID"</span>))&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(isIOS) &#123;</span><br><span class="line"><span class="built_in">window</span>.webkit.messageHandlers.showToast.postMessage(data);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span>(isAndroid) &#123;</span><br><span class="line"><span class="built_in">window</span>.android.showToast(<span class="built_in">JSON</span>.stringify(data));</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(data.type==<span class="number">1</span>)&#123;</span><br><span class="line">$.showLoading(<span class="string">" "</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(data.type==<span class="number">2</span>)&#123;</span><br><span class="line">$.hideLoading();</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(data.type==<span class="number">3</span>)&#123;</span><br><span class="line">$.toast(data.title, <span class="string">"text"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="10、修改单选框和复选框的样式"><a href="#10、修改单选框和复选框的样式" class="headerlink" title="10、修改单选框和复选框的样式"></a>10、修改单选框和复选框的样式</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- html --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">id</span>=<span class="string">"check"</span> <span class="attr">name</span>=<span class="string">"check"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"check"</span>&gt;</span>Checkbox<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=checkbox]</span> &#123;<span class="attribute">display</span>: none;&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=checkbox]</span> + <span class="selector-tag">label</span><span class="selector-pseudo">:before</span> &#123;  </span><br><span class="line"><span class="attribute">content</span>: <span class="string">""</span>;</span><br><span class="line"><span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">11px</span>;    </span><br><span class="line"><span class="attribute">line-height</span>: <span class="number">10px</span>;</span><br><span class="line"><span class="attribute">margin</span>: <span class="number">0</span> <span class="number">5px</span> <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">10px</span>;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">10px</span>;</span><br><span class="line"><span class="attribute">text-align</span>: center;</span><br><span class="line"><span class="attribute">vertical-align</span>: middle;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=checkbox]</span><span class="selector-pseudo">:checked</span> + <span class="selector-tag">label</span><span class="selector-pseudo">:before</span> &#123;  </span><br><span class="line"><span class="attribute">content</span>: <span class="string">"\2713"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="11、动画卡顿时，开启硬件加速"><a href="#11、动画卡顿时，开启硬件加速" class="headerlink" title="11、动画卡顿时，开启硬件加速"></a>11、动画卡顿时，开启硬件加速</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">选择器&#123;</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">translateZ</span>(0);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="12、Color-Border-Border-Color"><a href="#12、Color-Border-Border-Color" class="headerlink" title="12、Color + Border = Border-Color"></a>12、Color + Border = Border-Color</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type="text"]</span> &#123;  </span><br><span class="line"><span class="attribute">color</span>: red;</span><br><span class="line"><span class="attribute">border</span>: <span class="number">1px</span> solid;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="13、高德的事件绑定"><a href="#13、高德的事件绑定" class="headerlink" title="13、高德的事件绑定"></a>13、高德的事件绑定</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).on(<span class="string">'click'</span>,<span class="string">'类名'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="14、禁止移动端背景层滚动"><a href="#14、禁止移动端背景层滚动" class="headerlink" title="14、禁止移动端背景层滚动"></a>14、禁止移动端背景层滚动</h4><blockquote><p>弹出时设置<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.body.style.overflow = <span class="string">'hidden'</span>;</span><br><span class="line"><span class="built_in">document</span>.documentElement.style.overflow = <span class="string">'hidden'</span></span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>关闭弹出层时设置</p><blockquote><p>把值设置成auto即可</p></blockquote></blockquote><h4 id="15、ios的回弹效果"><a href="#15、ios的回弹效果" class="headerlink" title="15、ios的回弹效果"></a>15、ios的回弹效果</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">''</span>).on(<span class="string">'touchmove'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">event.preventDefault();</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="16、box-shadow"><a href="#16、box-shadow" class="headerlink" title="16、box-shadow"></a>16、box-shadow</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">box-shadow</span>: 10<span class="selector-tag">px</span> 10<span class="selector-tag">px</span> 5<span class="selector-tag">px</span> <span class="selector-id">#88888</span></span><br></pre></td></tr></table></figure><blockquote><p>第一个值：水平阴影的偏移量，为正值时生成右边阴影，为负时，生成左边阴影<br>第二个值：垂直阴影的偏移量，为正值时生成底部阴影，为负值时，生成顶部阴影<br>第三个值：阴影模糊值<br>第四个值：阴影颜色</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;1、去除select的默认三角样式&quot;&gt;&lt;a href=&quot;#1、去除select的默认三角样式&quot; class=&quot;headerlink&quot; title=&quot;1、去除select的默认三角样式&quot;&gt;&lt;/a&gt;1、去除select的默认三角样式&lt;/h4&gt;&lt;figure class
      
    
    </summary>
    
      <category term="随笔" scheme="http://yoursite.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="http://yoursite.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>css实现三角形原理！</title>
    <link href="http://yoursite.com/2017/12/10/css%E5%AE%9E%E7%8E%B0%E4%B8%89%E8%A7%92%E5%BD%A2%E5%8E%9F%E7%90%86-1/"/>
    <id>http://yoursite.com/2017/12/10/css实现三角形原理-1/</id>
    <published>2017-12-10T12:56:51.000Z</published>
    <updated>2019-05-23T04:46:22.695Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>对于一个块级元素，但我们分别将元素的上下左右四个border设置成一个比较大的像素（如10px），样式设置成solid ,分别设置成不同的颜色的时候，同时将元素的width,height设置为0.这时我们将会看到四条边均呈现为三角形的形状。如图：</p></blockquote><img src="/2017/12/10/css实现三角形原理-1/20160709112257058.png" title="如图"><blockquote><p>其css样式为：</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.element</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">border-top</span>: <span class="number">20px</span> solid aqua;</span><br><span class="line">    <span class="attribute">border-right</span>: <span class="number">20px</span> solid <span class="number">#760000</span>;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">20px</span> solid blue;</span><br><span class="line">    <span class="attribute">border-left</span>: <span class="number">20px</span> solid darkkhaki;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>一个普通的div。四个三角形分别是四条border四条border所呈现出来的，而我们最终的效果好像跟一个三角形的关系比较大些。如果得到一个三角形呢？其实这个很简单，我们只需要把其余三条border颜色属性设置为transparent（透明）的样式，另一个border的颜色属性保持不变。</p></blockquote><blockquote><p>看代码<br>html部分<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"element"</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>css部分<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.element</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">border-top</span>: <span class="number">20px</span> solid transparent;</span><br><span class="line">    <span class="attribute">border-right</span>: <span class="number">20px</span> solid transparent;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">20px</span> solid transparent;</span><br><span class="line">    <span class="attribute">border-left</span>: <span class="number">20px</span> solid darkkhaki;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>此时的效果：如下图</p></blockquote><img src="/2017/12/10/css实现三角形原理-1/20160709113050655.png" title="如图"><blockquote><p>好了，三角形出来了。那我们也就实现了最为关键的的地方。我们在弄出来一个白色的三角形，然后将白色三角形覆盖到这个有色三角形之上，但是不能完全覆盖，让其露出一个尖角的效果来。这就是基本的原理。</p></blockquote><h4 id="2-实现"><a href="#2-实现" class="headerlink" title="2.实现"></a>2.实现</h4><blockquote><p>首先需要一个div容器，设置border,width,height的属性，同时将设置其为相对定位。</p></blockquote><blockquote><p>上代码<br>html部分<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"angle-wrapper"</span>&gt;</span><br><span class="line">    </span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>css部分<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.angle-wrapper</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">20px</span> auto;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#cccccc</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>效果图如下：</p></blockquote><img src="/2017/12/10/css实现三角形原理-1/111111.png" title="如图"><blockquote><p>然后需要为这个在这个div右边框上添加两个三角形，一个三角形颜色与边框颜色相同，另一个三角形颜为白色，用于覆盖第一个三角形颜色的一部分。</p></blockquote><blockquote><p>这里我们使用元素的伪选择器:before,:after来加入这两个三角形，before和after默认为行内元素，所以首先要将其设置为块级元素，绝对定位。</p></blockquote><blockquote><p>首先添加before伪选择器，用它来生成与border颜色的相同的第一个三角形，并将其定位到左边框上。</p></blockquote><blockquote><p>上代码<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.angle-wrapper</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">''</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">20px</span> solid transparent;</span><br><span class="line">    <span class="attribute">border-left-color</span>: <span class="number">#cccccc</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: -<span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>效果图如下：</p></blockquote><img src="/2017/12/10/css实现三角形原理-1/20190124172635.png" title="如图"><blockquote><p>然后添加after伪选择器，用它生成一个白色的三角形，并将其定位到左边框上。这里需要注意的是白色三角形的大小要比有色三角形要小一些，小多少要根据div边框的大小而定。我这里边框为2px,所以白色三角形就比灰色三角形就小两个px。这样可以避免白色三角形将灰色三角形全覆盖，然后可以产生尖角的效果来。（我这里说的大小就是设置三角形时的border的px值，如after这里是18px,before那里是20px）</p></blockquote><blockquote><p>上代码：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.angle-wrapper</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">""</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">18px</span> solid transparent;</span><br><span class="line">    <span class="attribute">border-left-color</span>: <span class="number">#FFFFFF</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: -<span class="number">18px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>效果图如下：</p></blockquote><img src="/2017/12/10/css实现三角形原理-1/20190124172806.png" title="如图"><blockquote><p>完成。（这个对话框做的有点丑哈）</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;对于一个块级元素，但我们分别将元素的上下左右四个border设置成一个比较大的像素（如10px），样式设置成solid ,分别设置成不同的颜色的时候，同时将元素的width,height设置为0.这时我们将会看到四条边均呈现为三角形的形状。如图：&lt;
      
    
    </summary>
    
      <category term="CSS" scheme="http://yoursite.com/categories/CSS/"/>
    
    
      <category term="CSS" scheme="http://yoursite.com/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>CSS reset文件</title>
    <link href="http://yoursite.com/2017/11/30/css-reset/"/>
    <id>http://yoursite.com/2017/11/30/css-reset/</id>
    <published>2017-11-30T11:22:15.000Z</published>
    <updated>2019-05-23T02:59:16.444Z</updated>
    
    <content type="html"><![CDATA[<h4 id="css-reset文件"><a href="#css-reset文件" class="headerlink" title="css reset文件"></a>css reset文件</h4><blockquote><p>为了复用一些css属性，最近花了点时间把一些常用的总结一下<br>不多说，上代码  </p></blockquote><h4 id="代码如下："><a href="#代码如下：" class="headerlink" title="代码如下："></a>代码如下：</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><span class="line">*&#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">html</span>&#123; </span><br><span class="line">    <span class="attribute">overflow-y</span>: scroll; </span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span>&#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:active</span>,<span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>,<span class="selector-tag">a</span><span class="selector-pseudo">:link</span>,<span class="selector-tag">a</span><span class="selector-pseudo">:visited</span>&#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>: underline;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">input</span>,<span class="selector-tag">button</span>&#123;</span><br><span class="line">    <span class="attribute">border</span>: none;</span><br><span class="line">    <span class="attribute">outline</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">textarea</span>&#123;</span><br><span class="line">    <span class="attribute">outline</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">li</span>,<span class="selector-tag">ol</span>&#123;</span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">i</span> &#123;</span><br><span class="line">    <span class="attribute">font-style</span>: normal;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">table</span> &#123;</span><br><span class="line">    <span class="attribute">border-collapse</span>: collapse;</span><br><span class="line">    <span class="attribute">border-spacing</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 多行文本域的控制 */</span></span><br><span class="line"><span class="selector-tag">textarea</span>&#123;</span><br><span class="line">    <span class="attribute">resize</span>: none;                   <span class="comment">/*用户无法调整元素的尺寸*/</span></span><br><span class="line">    <span class="comment">/*resize: vertical;*/</span>           <span class="comment">/*用户可调整元素的高度*/</span></span><br><span class="line">    <span class="comment">/*resize: horizontal;*/</span>         <span class="comment">/*用户可调整元素的宽度*/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 文字对齐方式 */</span></span><br><span class="line"><span class="selector-class">.text_ce</span>&#123;</span><br><span class="line">    <span class="attribute">text-align</span>: center</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.text_rt</span>&#123;</span><br><span class="line">    <span class="attribute">text-align</span>: right</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.text_lf</span>&#123;</span><br><span class="line">    <span class="attribute">text-align</span>: left</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 浮动 */</span></span><br><span class="line"><span class="selector-class">.fl</span>&#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.fr</span>&#123;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 清除浮动 */</span></span><br><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span>&#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">''</span>;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">clear</span>: both;</span><br><span class="line">    <span class="attribute">visibility</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 弹性盒子 */</span></span><br><span class="line"><span class="selector-class">.flex</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: -webkit-box;</span><br><span class="line">    <span class="attribute">display</span>: -webkit-flex;</span><br><span class="line">    <span class="attribute">display</span>: -ms-flexbox;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.flex_v</span>&#123;</span><br><span class="line">    <span class="attribute">-webkit-box-orient</span>: vertical;</span><br><span class="line">    <span class="attribute">-webkit-flex-direction</span>: column;</span><br><span class="line">    <span class="attribute">-ms-flex-direction</span>: column;</span><br><span class="line">    <span class="attribute">flex-direction</span>: column;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.flex1</span>&#123;</span><br><span class="line">    <span class="attribute">-webkit-box-flex</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">-webkit-flex</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">-ms-flex</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">flex</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.flex2</span>&#123;</span><br><span class="line">    <span class="attribute">-webkit-box-flex</span>: <span class="number">2</span>;</span><br><span class="line">    <span class="attribute">-webkit-flex</span>: <span class="number">2</span>;</span><br><span class="line">    <span class="attribute">-ms-flex</span>: <span class="number">2</span>;</span><br><span class="line">    <span class="attribute">flex</span>: <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.flex3</span>&#123;</span><br><span class="line">    <span class="attribute">-webkit-box-flex</span>: <span class="number">3</span>;</span><br><span class="line">    <span class="attribute">-webkit-flex</span>: <span class="number">3</span>;</span><br><span class="line">    <span class="attribute">-ms-flex</span>: <span class="number">3</span>;</span><br><span class="line">    <span class="attribute">flex</span>: <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.flex_hc</span>&#123;</span><br><span class="line">    <span class="attribute">-webkit-justify-content</span>: center;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.flex_hm</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: -webkit-box;</span><br><span class="line">     <span class="attribute">display</span>: -webkit-flex;</span><br><span class="line">     <span class="attribute">display</span>: flex;</span><br><span class="line">     <span class="attribute">-webkit-box-align</span>: center;</span><br><span class="line">     <span class="attribute">-webkit-align-items</span>: center;</span><br><span class="line">     <span class="attribute">align-items</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.flex_ld</span>&#123;</span><br><span class="line">    <span class="attribute">-webkit-justify-content</span>: space-between;</span><br><span class="line">    <span class="attribute">justify-content</span>: space-between;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.flex_k</span>&#123;</span><br><span class="line">    <span class="attribute">-webkit-justify-content</span>: space-around;</span><br><span class="line">    <span class="attribute">justify-content</span>: space-around;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 字体超出省略号 */</span></span><br><span class="line"><span class="comment">/* 一行文字 */</span></span><br><span class="line"><span class="selector-class">.text_ellipsis</span>&#123;</span><br><span class="line">    <span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line">    <span class="attribute">white-space</span>: nowrap;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">word-wrap</span>: normal;</span><br><span class="line">    <span class="attribute">word-wrap</span>: break-word;</span><br><span class="line">    <span class="attribute">word-break</span>: break-all;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 多行文字   谷歌才会出现的效果，为确保其他浏览器不出现样式问题，height:xxxpx  */</span></span><br><span class="line"><span class="selector-class">.moretext_ellipsis</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: -webkit-box;</span><br><span class="line">    <span class="attribute">-webkit-box-orient</span>: vertical;</span><br><span class="line">    <span class="attribute">-webkit-line-clamp</span>: <span class="number">2</span>;</span><br><span class="line">     <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">word-break</span>: break-all;</span><br><span class="line">    <span class="attribute">word-wrap</span>: break-word;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="欢迎补充"><a href="#欢迎补充" class="headerlink" title="欢迎补充"></a>欢迎补充</h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;css-reset文件&quot;&gt;&lt;a href=&quot;#css-reset文件&quot; class=&quot;headerlink&quot; title=&quot;css reset文件&quot;&gt;&lt;/a&gt;css reset文件&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;为了复用一些css属性，最近花了点时间把一
      
    
    </summary>
    
      <category term="CSS" scheme="http://yoursite.com/categories/CSS/"/>
    
    
      <category term="CSS" scheme="http://yoursite.com/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>Hello,Hexo</title>
    <link href="http://yoursite.com/2017/11/23/Hello-Hexo/"/>
    <id>http://yoursite.com/2017/11/23/Hello-Hexo/</id>
    <published>2017-11-23T08:22:15.000Z</published>
    <updated>2019-05-23T03:10:36.764Z</updated>
    
    <content type="html"><![CDATA[<h3 id="迁移注意问题说明"><a href="#迁移注意问题说明" class="headerlink" title="迁移注意问题说明"></a>迁移注意问题说明</h3><blockquote><p>1.执行clone命名</p><blockquote><p>git clone -b hexo 路径</p></blockquote></blockquote><blockquote><p>2.安装依赖</p><blockquote><p>依次执行 npm install hexo(最好全局安装hexo，不然hexo环境变量不主动配置) npm install hexo-deployer-git     (*切记不要执行hexo init)</p></blockquote></blockquote><h3 id="迁移后注意事项"><a href="#迁移后注意事项" class="headerlink" title="迁移后注意事项"></a>迁移后注意事项</h3><ol><li><p>新建博客命：hexo new post “博客名”</p></li><li><p>完成后先提交代码 直接提交到hexo分支上，不用向master分支上推。 提交代码时不用提交package-lock.json文件。只提交写的文件就行，.json后缀的文件都不用提交</p></li><li><p>执行发布命令 hexo g -d</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;迁移注意问题说明&quot;&gt;&lt;a href=&quot;#迁移注意问题说明&quot; class=&quot;headerlink&quot; title=&quot;迁移注意问题说明&quot;&gt;&lt;/a&gt;迁移注意问题说明&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;1.执行clone命名&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;g
      
    
    </summary>
    
      <category term="hexo" scheme="http://yoursite.com/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
</feed>
